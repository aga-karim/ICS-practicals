add:
#include <iostream>

using namespace std;

const int MAX_SIZE = 4;

void add_matrices(int A[][MAX_SIZE], int B[][MAX_SIZE], int C[][MAX_SIZE], int rows, int cols);

int main()
{
    int A[MAX_SIZE][MAX_SIZE], B[MAX_SIZE][MAX_SIZE], C[MAX_SIZE][MAX_SIZE];
    int rows, cols;
    
    cout << "Enter the number of rows (max 4): ";
    cin >> rows;
    
    cout << "Enter the number of columns (max 4): ";
    cin >> cols;
    
    cout << "Enter the elements of matrix A:\n";
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cin >> A[i][j];
        }
    }
    
    cout << "Enter the elements of matrix B:\n";
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cin >> B[i][j];
        }
    }
    
    add_matrices(A, B, C, rows, cols);
    
    cout << "Resultant matrix C = A + B:\n";
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << C[i][j] << " ";
        }
        cout << endl;
    }
    
    return 0;
}

void add_matrices(int A[][MAX_SIZE], int B[][MAX_SIZE], int C[][MAX_SIZE], int rows, int cols)
{
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            C[i][j] = A[i][j] + B[i][j];
        }
    }
}

subtract:
#include <iostream>

using namespace std;

const int MAX_SIZE = 4;

void subtract_matrices(int A[][MAX_SIZE], int B[][MAX_SIZE], int C[][MAX_SIZE], int rows, int cols);

int main()
{
    int A[MAX_SIZE][MAX_SIZE], B[MAX_SIZE][MAX_SIZE], C[MAX_SIZE][MAX_SIZE];
    int rows, cols;
    
    cout << "Enter the number of rows (max 4): ";
    cin >> rows;
    
    cout << "Enter the number of columns (max 4): ";
    cin >> cols;
    
    cout << "Enter the elements of matrix A:\n";
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cin >> A[i][j];
        }
    }
    
    cout << "Enter the elements of matrix B:\n";
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cin >> B[i][j];
        }
    }
    
    subtract_matrices(A, B, C, rows, cols);
    
    cout << "Resultant matrix C = A - B:\n";
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << C[i][j] << " ";
        }
        cout << endl;
    }
    
    return 0;
}

void subtract_matrices(int A[][MAX_SIZE], int B[][MAX_SIZE], int C[][MAX_SIZE], int rows, int cols)
{
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            C[i][j] = A[i][j] - B[i][j];
        }
    }
}

multipication:
#include <iostream>

using namespace std;

const int MAX_SIZE = 4;

void multiply_matrices(int A[][MAX_SIZE], int B[][MAX_SIZE], int C[][MAX_SIZE], int rows_A, int cols_A, int cols_B);

int main()
{
    int A[MAX_SIZE][MAX_SIZE], B[MAX_SIZE][MAX_SIZE], C[MAX_SIZE][MAX_SIZE];
    int rows_A, cols_A, rows_B, cols_B;
    
    cout << "Enter the number of rows for matrix A (max 4): ";
    cin >> rows_A;
    
    cout << "Enter the number of columns for matrix A (max 4): ";
    cin >> cols_A;
    
    cout << "Enter the elements of matrix A:\n";
    for (int i = 0; i < rows_A; i++) {
        for (int j = 0; j < cols_A; j++) {
            cin >> A[i][j];
        }
    }
    
    cout << "Enter the number of rows for matrix B (max 4): ";
    cin >> rows_B;
    
    cout << "Enter the number of columns for matrix B (max 4): ";
    cin >> cols_B;
    
    if (cols_A != rows_B) {
        cout << "Error: The number of columns in matrix A must be equal to the number of rows in matrix B.\n";
        return 0;
    }
    
    cout << "Enter the elements of matrix B:\n";
    for (int i = 0; i < rows_B; i++) {
        for (int j = 0; j < cols_B; j++) {
            cin >> B[i][j];
        }
    }
    
    multiply_matrices(A, B, C, rows_A, cols_A, cols_B);
    
    cout << "Resultant matrix C = A * B:\n";
    for (int i = 0; i < rows_A; i++) {
        for (int j = 0; j < cols_B; j++) {
            cout << C[i][j] << " ";
        }
        cout << endl;
    }
    
    return 0;
}

void multiply_matrices(int A[][MAX_SIZE], int B[][MAX_SIZE], int C[][MAX_SIZE], int rows_A, int cols_A, int cols_B)
{
    for (int i = 0; i < rows_A; i++) {
        for (int j = 0; j < cols_B; j++) {
            C[i][j] = 0;
            for (int k = 0; k < cols_A; k++) {
                C[i][j] += A[i][k] * B[k][j];
            }
        }
    }
}
